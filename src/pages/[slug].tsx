import type { GetStaticProps, NextPage } from "next";
import Image from "next/image";
import Head from "next/head";
import Link from "next/link";
import { PageLayout } from "~/components/layout";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";

dayjs.extend(relativeTime);

import { api } from "~/utils/api";

import { LoadingSpinner } from "~/components/loading";
import { PostView } from "~/components/postview";
import { generateSsgHelper } from "~/server/helpers/ssgHelper";

const ProfileFeed = (props: { userId: string }) => {
  const { data, isLoading } = api.posts.getPostsByUserId.useQuery({
    userId: props.userId,
  });
  if (isLoading) {
    return (
      <div className="align-center flex content-center items-center justify-center">
        <LoadingSpinner size={56} />
      </div>
    );
  }
  if (!data || data.length === 0) return <div>User has not posted.</div>;
  return (
    <div className="flex flex-col">
      {data.map((fullPost) => (
        <PostView {...fullPost} key={fullPost.post.id} />
      ))}
    </div>
  );
};
const ProfilePage: NextPage<{ username: string }> = ({ username }) => {
  const { data } = api.profile.getUserByUsername.useQuery({
    username,
  });
  const githublink = `https://www.github.com/${username ?? ""}`;

  if (!data) return <div>404</div>;
  return (
    <>
      <Head>
        <title>{data.username}</title>
        <meta name="description" content="Generated by create-t3-app" />
      </Head>
      <PageLayout>
        <Link href="/">
          <div className="col-span-2 m-4 flex h-[50px] w-[80px] rounded-md border-l-4 border-l-slate-700 bg-black p-1 hover:bg-slate-900">
            <div className="text-4xl">{"<"}</div>
          </div>
        </Link>
        <div className="relative h-36 border-slate-400 bg-gray-900 p-4">
          <Image
            src={data.profilepicture}
            alt={`${data.username ?? ""}'s profile pic`}
            height={128}
            width={128}
            className="absolute bottom-0 left-0 -mb-[64px] ml-5 rounded-full border-4 border-black"
          />
        </div>
        <div className="h-[64px]"></div>
        <div className="p-4">
          <div className="text-2xl font-bold">{data.username ?? ""}</div>

          <div className="p-2">
            <Link href={githublink}>[Go to GitHub]</Link>
          </div>
        </div>
        <div className="border-b border-slate-600"></div>
        <ProfileFeed userId={data.id} />
      </PageLayout>
    </>
  );
};

export const getStaticProps: GetStaticProps = async (context) => {
  const ssg = generateSsgHelper();
  const slug = context.params?.slug;
  if (typeof slug !== "string") throw new Error("no username");
  const username = slug.replace("@", "");

  await ssg.profile.getUserByUsername.prefetch({ username });

  return {
    props: {
      trpcState: ssg.dehydrate(),
      username,
    },
  };
};
export const getStaticPaths = () => {
  return { paths: [], fallback: "blocking" };
};

export default ProfilePage;
