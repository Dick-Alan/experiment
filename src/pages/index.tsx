import { type NextPage } from "next";
import Image from "next/image";
import Head from "next/head";
import Link from "next/link";
import { SignIn, SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";

dayjs.extend(relativeTime);

import { api } from "~/utils/api";
import type { RouterOutputs } from "~/utils/api";

const CreatePostWizard = () => {
  const { user } = useUser();

  if (!user) return null;
  return (
    <div className="flex-col-2 flex gap-4 rounded-md border border-lime-200 p-2">
      <div>
        {user.fullName}
        <Image
          className="h-24 w-24 rounded-full"
          src={user.profileImageUrl}
          alt="Profile image"
          width={56}
          height={56}
        />
      </div>
      <div className="flex w-3/4 flex-col">
        <input
          className=" m-2  h-12 grow rounded-sm bg-gray-900 bg-opacity-50 p-1 outline-none"
          placeholder="Type message"
        />
        <button>Post</button>
      </div>
    </div>
  );
};
type PostwithUser = RouterOutputs["posts"]["getAll"][number];
const PostView = (props: PostwithUser) => {
  const { post, author } = props;
  const postTime = post.createdAt.toString().substring(0, 33);
  console.log(post);
  return (
    <div
      className="m-4 flex gap-1 rounded-md border-y border-lime-400 bg-gray-900 bg-opacity-40 p-5 text-left"
      key={post.id}
    >
      <div className="">
        <Image
          src={author.profilepicture}
          alt={`@${author.username}'s profile picture`}
          className="rounded-full"
          width={56}
          height={56}
        />
      </div>
      <div className="flex flex-col">
        <span className="text-s">
          {`@${author.username}`} [
          <span className="text-xs">{dayjs(postTime).fromNow()}</span>]
        </span>
        <span className="m-4 rounded-md p-2">{post.content}</span>
      </div>
    </div>
  );
};

const Home: NextPage = () => {
  const user = useUser();

  const { data, isLoading } = api.posts.getAll.useQuery();

  if (!data || isLoading) return <div>Loading...</div>;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="bg-grey-800 h-full w-full border-x-4 border-lime-300 md:max-w-2xl">
          <div>
            {!user.isSignedIn && (
              <div className="m-4 flex w-32 rounded-md bg-gray-900 px-4 text-right hover:bg-gray-700">
                <SignInButton />
              </div>
            )}
            {!!user.isSignedIn && (
              <div className="max-h-26 max-w-26 rounded-full p-4">
                <CreatePostWizard />
              </div>
            )}
          </div>
          <div className="flex flex-col">
            {[...data, ...data]?.map((fullPost) => (
              <PostView {...fullPost} key={fullPost.post.id} />
            ))}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
